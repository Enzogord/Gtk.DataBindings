// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------



public partial class MainWindow {
    
    private Gtk.Action jkjhkAction;
    
    private Gtk.DataBindings.DataVBox datavbox1;
    
    private Gtk.DataBindings.DataSpinButton dataspinbutton2;
    
    private Gtk.DataBindings.DataEntry dataentry2;
    
    private Gtk.Label label1;
    
    protected virtual void Build() {
        Stetic.Gui.Initialize(this);
        // Widget MainWindow
        Gtk.UIManager w1 = new Gtk.UIManager();
        Gtk.ActionGroup w2 = new Gtk.ActionGroup("Default");
        this.jkjhkAction = new Gtk.Action("jkjhkAction", Mono.Unix.Catalog.GetString("jkjhk"), null, null);
        this.jkjhkAction.ShortLabel = Mono.Unix.Catalog.GetString("jkjhk");
        w2.Add(this.jkjhkAction, null);
        w1.InsertActionGroup(w2, 0);
        this.AddAccelGroup(w1.AccelGroup);
        this.Name = "MainWindow";
        this.Title = Mono.Unix.Catalog.GetString("MainWindow");
        this.WindowPosition = ((Gtk.WindowPosition)(4));
        this.BorderWidth = ((uint)(8));
        this.Resizable = false;
        this.AllowGrow = false;
        // Container child MainWindow.Gtk.Container+ContainerChild
        this.datavbox1 = new Gtk.DataBindings.DataVBox();
        this.datavbox1.Name = "datavbox1";
        this.datavbox1.Spacing = 6;
        this.datavbox1.InheritedDataSource = false;
        this.datavbox1.InheritedBoundaryDataSource = false;
        // Container child datavbox1.Gtk.Box+BoxChild
        this.dataspinbutton2 = new Gtk.DataBindings.DataSpinButton(0, 100, 1);
        this.dataspinbutton2.CanFocus = true;
        this.dataspinbutton2.Name = "dataspinbutton2";
        this.dataspinbutton2.Adjustment.PageIncrement = 10;
        this.dataspinbutton2.ClimbRate = 1;
        this.dataspinbutton2.Numeric = true;
        this.dataspinbutton2.Value = 1;
        this.dataspinbutton2.InheritedDataSource = true;
        this.dataspinbutton2.Mappings = "IntValue";
        this.dataspinbutton2.InheritedBoundaryDataSource = false;
        this.datavbox1.Add(this.dataspinbutton2);
        Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(this.datavbox1[this.dataspinbutton2]));
        w3.Position = 0;
        w3.Expand = false;
        w3.Fill = false;
        // Container child datavbox1.Gtk.Box+BoxChild
        this.dataentry2 = new Gtk.DataBindings.DataEntry();
        this.dataentry2.CanFocus = true;
        this.dataentry2.Name = "dataentry2";
        this.dataentry2.IsEditable = true;
        this.dataentry2.InvisibleChar = 'â€¢';
        this.dataentry2.InheritedDataSource = true;
        this.dataentry2.Mappings = "StrValue";
        this.dataentry2.InheritedBoundaryDataSource = false;
        this.datavbox1.Add(this.dataentry2);
        Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(this.datavbox1[this.dataentry2]));
        w4.Position = 1;
        w4.Expand = false;
        w4.Fill = false;
        // Container child datavbox1.Gtk.Box+BoxChild
        this.label1 = new Gtk.Label();
        this.label1.Name = "label1";
        this.label1.LabelProp = Mono.Unix.Catalog.GetString("ConfigFile supports file monitoring, so in this example you can go to ~/.config/config_sample1 or config_sample1 in your Application Data on Windows and manually edit config.xml. Controls will auto update on save");
        this.label1.Wrap = true;
        this.datavbox1.Add(this.label1);
        Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(this.datavbox1[this.label1]));
        w5.Position = 2;
        w5.Expand = false;
        w5.Fill = false;
        this.Add(this.datavbox1);
        if ((this.Child != null)) {
            this.Child.ShowAll();
        }
        this.DefaultWidth = 1593;
        this.DefaultHeight = 300;
        this.Show();
        this.DeleteEvent += new Gtk.DeleteEventHandler(this.OnDeleteEvent);
        this.dataspinbutton2.LeaveNotifyEvent += new Gtk.LeaveNotifyEventHandler(this.OnDataspinbutton2LeaveNotifyEvent);
    }
}
